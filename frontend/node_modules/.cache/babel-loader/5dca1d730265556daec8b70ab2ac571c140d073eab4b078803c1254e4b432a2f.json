{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashil\\\\OneDrive\\\\Desktop\\\\intern\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport UserSelection from './components/UserSelection';\nimport Leaderboard from './components/Leaderboard';\nimport PointsHistory from './components/PointsHistory';\nimport AddUser from './components/AddUser';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [pointsHistory, setPointsHistory] = useState([]);\n  const [lastPointsClaimed, setLastPointsClaimed] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n\n    // Listen for real-time updates\n    newSocket.on('pointsClaimed', data => {\n      setUsers(data.users);\n      setLastPointsClaimed({\n        userName: data.user.name,\n        points: data.pointsAwarded\n      });\n      fetchPointsHistory();\n    });\n    newSocket.on('usersUpdated', updatedUsers => {\n      setUsers(updatedUsers);\n    });\n\n    // Fetch initial data\n    fetchUsers();\n    fetchPointsHistory();\n\n    // Cleanup\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/users`);\n      setUsers(response.data);\n      if (response.data.length > 0 && !selectedUser) {\n        setSelectedUser(response.data[0]._id);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      alert('Error fetching users. Please check if the server is running.');\n    }\n  };\n  const fetchPointsHistory = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/points-history`);\n      setPointsHistory(response.data);\n    } catch (error) {\n      console.error('Error fetching points history:', error);\n    }\n  };\n  const handleClaimPoints = async () => {\n    if (!selectedUser) {\n      alert('Please select a user first');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/claim-points`, {\n        userId: selectedUser\n      });\n\n      // Local state updates will be handled by socket events\n      console.log('Points claimed successfully:', response.data);\n    } catch (error) {\n      console.error('Error claiming points:', error);\n      alert('Error claiming points. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddUser = async userName => {\n    try {\n      await axios.post(`${API_BASE_URL}/users`, {\n        name: userName\n      });\n      // The socket event will update the users list\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error adding user:', error);\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n        alert(error.response.data.error);\n      } else {\n        alert('Error adding user. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFC6 Points Claiming System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a user and claim random points (1-10) to see the leaderboard update in real-time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-actions\",\n          children: [/*#__PURE__*/_jsxDEV(UserSelection, {\n            users: users,\n            selectedUser: selectedUser,\n            setSelectedUser: setSelectedUser,\n            onClaimPoints: handleClaimPoints,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddUser, {\n            onAddUser: handleAddUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), lastPointsClaimed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"points-notification\",\n            children: [\"\\uD83C\\uDF89 \", lastPointsClaimed.userName, \" claimed \", lastPointsClaimed.points, \" points!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leaderboard-section\",\n          children: /*#__PURE__*/_jsxDEV(Leaderboard, {\n            users: users\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-section\",\n          children: /*#__PURE__*/_jsxDEV(PointsHistory, {\n            history: pointsHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZzwLOQ+Rkygr4Tt2XPk1YLT4EcQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","UserSelection","Leaderboard","PointsHistory","AddUser","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","users","setUsers","selectedUser","setSelectedUser","pointsHistory","setPointsHistory","lastPointsClaimed","setLastPointsClaimed","loading","setLoading","socket","setSocket","newSocket","on","data","userName","user","name","points","pointsAwarded","fetchPointsHistory","updatedUsers","fetchUsers","close","response","get","length","_id","error","console","alert","handleClaimPoints","post","userId","log","handleAddUser","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClaimPoints","onAddUser","history","_c","$RefreshReg$"],"sources":["C:/Users/ashil/OneDrive/Desktop/intern/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport UserSelection from './components/UserSelection';\nimport Leaderboard from './components/Leaderboard';\nimport PointsHistory from './components/PointsHistory';\nimport AddUser from './components/AddUser';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [pointsHistory, setPointsHistory] = useState([]);\n  const [lastPointsClaimed, setLastPointsClaimed] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    // Initialize socket connection\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n\n    // Listen for real-time updates\n    newSocket.on('pointsClaimed', (data) => {\n      setUsers(data.users);\n      setLastPointsClaimed({\n        userName: data.user.name,\n        points: data.pointsAwarded\n      });\n      fetchPointsHistory();\n    });\n\n    newSocket.on('usersUpdated', (updatedUsers) => {\n      setUsers(updatedUsers);\n    });\n\n    // Fetch initial data\n    fetchUsers();\n    fetchPointsHistory();\n\n    // Cleanup\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/users`);\n      setUsers(response.data);\n      if (response.data.length > 0 && !selectedUser) {\n        setSelectedUser(response.data[0]._id);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      alert('Error fetching users. Please check if the server is running.');\n    }\n  };\n\n  const fetchPointsHistory = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/points-history`);\n      setPointsHistory(response.data);\n    } catch (error) {\n      console.error('Error fetching points history:', error);\n    }\n  };\n\n  const handleClaimPoints = async () => {\n    if (!selectedUser) {\n      alert('Please select a user first');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/claim-points`, {\n        userId: selectedUser\n      });\n      \n      // Local state updates will be handled by socket events\n      console.log('Points claimed successfully:', response.data);\n    } catch (error) {\n      console.error('Error claiming points:', error);\n      alert('Error claiming points. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddUser = async (userName) => {\n    try {\n      await axios.post(`${API_BASE_URL}/users`, { name: userName });\n      // The socket event will update the users list\n    } catch (error) {\n      console.error('Error adding user:', error);\n      if (error.response?.data?.error) {\n        alert(error.response.data.error);\n      } else {\n        alert('Error adding user. Please try again.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>🏆 Points Claiming System</h1>\n        <p>Select a user and claim random points (1-10) to see the leaderboard update in real-time!</p>\n      </header>\n\n      <main className=\"App-main\">\n        <div className=\"top-section\">\n          <div className=\"user-actions\">\n            <UserSelection \n              users={users}\n              selectedUser={selectedUser}\n              setSelectedUser={setSelectedUser}\n              onClaimPoints={handleClaimPoints}\n              loading={loading}\n            />\n            \n            <AddUser onAddUser={handleAddUser} />\n            \n            {lastPointsClaimed && (\n              <div className=\"points-notification\">\n                🎉 {lastPointsClaimed.userName} claimed {lastPointsClaimed.points} points!\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"content-section\">\n          <div className=\"leaderboard-section\">\n            <Leaderboard users={users} />\n          </div>\n          \n          <div className=\"history-section\">\n            <PointsHistory history={pointsHistory} />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}